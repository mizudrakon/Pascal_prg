Welcome to GGS (Glorified Glider Simulator)!
GGS is a text based Conway's Game of Life alternative that allows you to do basicly everything traditional Game of Life does:
	1. insert a pattern of life cells into a two dimensional field;
	2. watch it evolve in accordance with a few basic rules:
		2.1.For a space that is 'populated':
			a)Each cell with one or no neighbors dies, as if by solitude.
			b)Each cell with four or more neighbors dies, as if by overpopulation.
			c)Each cell with two or three neighbors survives.
		2.2.For a space that is 'empty' or 'unpopulated'
			d)Each cell with three neighbors becomes populated.
GGS works exactly alike for any patterns of 1s and 0s, but also allows insertion of cells with greater survivability (up to nine generation) and cells that are immortal, so you can see how unbalanced the whole thing becomes with such nonsense.

It uses algorithm that chacks every cell in spcified boundaries by counting live cells in a square of 9 with the cell as its center:
	1.For exactly 3 living cells, the central one lives whatever its current state;
	2.For exactly 4, the central one keeps its current state;
	3.For any other number the centeral dies or stays dead.
Boundaries are set up as extreme numbers of rows and columns that contain living cells and are chancked each iteration.
This playfield is looped, so patternes can migrate over the edges to opposite ends of the field. This can result in some not exactly nice outcomes since pattern like 11 that starts at 512 and ends at 1 will be writen out as 1....(510dots)....1, so beware!

interface works like this (abridged):
1. specify first row and column of your pattern input:
  row: integer (1-512)
  column: integer (1-512)

2. pattern input:
  0  			dead cell
  x,X,n,N		no change
  1,2,3,4,5,6,7,8,9 	live cell (number of generation cell can survive on its own)
  i,I			immortal cell
  e,E			mark the end of row
  s,S,q,Q		mark the end of pattern (and press ENTER)
  every other symbol is meaningless

  i.e.write: 	01e
		001e
		111s 
	to make a glider :)

3. number of generations:integer (1-512)
			* or 's' ('S' or just 'stop' to stop the program)

If you want to stop the program, the best bet is to write 's' or 'stop' as current input.
In part 2, this will result in ending the pattern input procedure and continues the program, but everywhere else it kills it entirely.
